一、

  1. 1 == 1.0， True == 1都是真值

二、list 

  1. list中，-1表示倒数第1个元素，-2表示倒数第2个
  2. list的方法:

L.append(var)追加元素
L.count(var) 计算var 在L中出现的次数
len(L) 返回L的长度
L.extend(list) 将list追加在L后面
L.index(var) 返回var在L中的位置，若无则抛出异常
L.insert(index, var) 在index处插入var，其余元素向后推,如果indes大于list的长度则添加在最后，如index < 0, 添加在开始处
L.pop()弹出(返回并删除)最后一个元素
L.pot(index)弹出(返回并删除)index处的元素
L.remove(var) 删除var，若无，抛出异常
L.reverse() 倒序
L.sort() 排序
L.sort(func) 用func作为比较函数，进行排序


  3. 字符串操作

s.capitalize() 首字母大写
s.lower() 全部变成小写
s.upper() 全部变成大写
s.swapcase() 大小写互换
len(s) 返回字符串长度

  字符串判断

s.isalnum()
s.isalpha()
s.isdigit()
s.islower()
s.isupper()
s.istitle() 所有单词都是首字母大小，像个title
s.isspace()  判断空白字符 \n, \t, \r

s.strip() 去掉两边的空白字符
s.lstrip()
s.rstrip()


  4. 每个函数对象(module也是)都有一个__doc__的属性，函数语句中，
如果第一个表达式是一个string， 这个函数的__doc__就是这个string，否则__doc__就是None。

print "".join.__doc__
print range.__doc__
print [].extend.__doc__


  5.可以认为lambda函数就是一种简单的匿名函数
>>> f = lambda a, b: a + b
>>> f(1, 2)
3
>>> f('abc', 'def')
'abcdef'
>>>
f等价于def f(a, b): return a + b

  6.查找module, python在sys.path中的所有目录中查找module.

  7.可变参数：
  
  def printf(format, *arg) 其中*arg必须是最后一个参数， *表示接受任意多个参数，
  除了第一个参数format，多余的参数都作为一个tuple传递给函数printf，可以通过arg来访问

  def printf(format, **arg) 参数按照dictionary的方式传递给函数，接受任意多个参数。
  **arg表示接受任意个数有有名字的参数传递。如：
  
def printf(format, **arg):
  for k in arg.keys():
    print "keyword [%s] is %s" % (k, arg[k])

printf("ok", one = 1, two = 2, three = 3)

  
  调用函数时，要指明参数的名字，one = 1, two = 2, three = 3，
  函数中可以用dictionary的方式来操作arg， 其中keys 是["one", "two", "three"], values是[1, 2, 3]。
  
  8.
